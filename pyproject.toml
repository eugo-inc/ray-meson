[build-system]
build-backend = 'mesonpy'

# Potentially, lower versions may work, yet they haven't been tested nor guaranteed to work.
# The only 2 hard requirements are: `meson>=1.3.0` and `cython>=3.0.0`.
requires = [
    'meson_python>=0.16.0',
    'meson>=1.5.2',
    'cython>=3.0.11'
]


[project]
name = 'ray'
version = '3.0.0.dev0'
readme = 'README.rst'
requires-python = '>=3.12'
license = {file = 'LICENSE'}

# @TODO+:Eugo
# These and `[project.optional-dependencies]` should be synced against `setup.py`, `requirements.txt`. and PyPi API:
#
dependencies = [
    'click>=7.0',
    'filelock',
    'jsonschema',
    'msgpack<2.0.0,>=1.0.0',
    'packaging',
    'protobuf!=3.19.5,>=3.15.3',
    'pyyaml',
    'aiosignal',
    'frozenlist',
    'requests',

]


[project.optional-dependencies]
all_cpp = [
    'ray[all]',
    'ray[cpp]'
]

all = [
    'ray[air]',
    'ray[adag]',
    'ray[client]',
    'ray[default]',
    'ray[data]',
    'ray[observability]',
    'ray[serve]',
    'ray[serve_grpc]',
    'ray[tune]',
    'ray[train]',
]

air = [
    'ray[data]',
    'ray[serve]',
    'ray[tune]',
    'ray[train]',
]

adag = [
    'cupy-cuda12x; sys_platform != "darwin"',
]

client = [
    'grpcio!=1.56.0',
]

cpp = [
    "ray_cpp==3.0.0.dev0",
]

default = [
    'aiohttp_cors',
    'aiohttp>=3.7',
    'colorful',
    'grpcio>=1.32.0; python_version < "3.10"',
    'grpcio>=1.42.0; python_version >= "3.10"',
    'memray; sys_platform != "win32"',
    'opencensus',
    'prometheus-client>=0.7.1',
    'py_spy>=0.2.0',
    'pydantic!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3',
    'requests',
    'smart_open',
    'virtualenv!=20.21.1,>=20.0.24',
]

data = [
    'fsspec',
    'numpy>=1.20',
    'pandas>=1.3',
    'pyarrow>=6.0.1',
]

observability = [
    'opentelemetry-api',
    'opentelemetry-sdk',
    'opentelemetry-exporter-otlp',
]

rllib = [
    'ray[tune]',

    'dm_tree',
    'gymnasium==0.28.1',
    'lz4',
    'pyyaml',
    'rich',
    'scikit_image',
    'scipy',
    'typer',
]

serve = [
    'ray[default]',

    'fastapi',
    'requests',
    'starlette',
    'uvicorn[standard]',
    'watchfiles',
]

serve_grpc = [
    'ray[serve]',
]

tune = [
    'fsspec',
    'pandas',
    'pyarrow>=6.0.1',
    'requests',
    'tensorboardx>=1.9',
]

train = [
    'ray[tune]'
]


[project.scripts]
ray = 'ray.scripts.scripts:main'
rllib = { module = "ray.rllib.scripts:cli", extras = ["rllib"] }
serve = 'ray.serve.scripts:cli'
tune = 'ray.tune.cli.scripts:cli'
